{"version":3,"sources":["components/BackgroundImage.js","components/Section.js","util/router.js","util/theme.js","components/Navbar.js","components/SectionHeader.js","components/HeroSection.js","components/PoolStats.js","components/PoolLogs.js","components/TokensSection.js","components/Balancers.js","components/Footer.js","pages/index.js","pages/not-found.js","util/analytics.js","pages/_app.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","content","backgroundPosition","backgroundSize","top","left","bottom","right","position","zIndex","BackgroundImage","props","classes","image","opacity","otherProps","className","style","backgroundImage","palette","background","default","emphasize","primary","main","secondary","reduce","acc","name","value","capitalize","backgroundColor","color","getContrastText","borderTop","colorInherit","colorTransparent","Section","bgColor","bgImage","bgImageOpacity","size","children","verticalPadding","normal","xs","medium","sm","large","auto","Box","component","py","history","createBrowserHistory","Router","ScrollToTop","location","useLocation","useEffect","window","scrollTo","pathname","themeConfig","light","type","colors","paper","dark","common","typography","fontSize","fontFamily","breakpoints","values","md","lg","xl","overrides","MuiCssBaseline","minHeight","display","flexDirection","flexShrink","useDarkModeStorage","createLocalStorageStateHook","ThemeProvider","prefersDarkMode","useMediaQuery","noSsr","isDarkModeStored","setIsDarkModeStored","undefined","createMuiTheme","toggle","CssBaseline","useDarkMode","useTheme","logo","height","marginRight","spacing","drawerList","width","spacer","flexGrow","Navbar","darkMode","useState","drawerOpen","setDrawerOpen","logoInverted","AppBar","elevation","Container","disableGutters","Toolbar","to","Hidden","mdUp","implementation","IconButton","onClick","smDown","Button","Link","Drawer","anchor","open","onClose","List","ListItem","button","ListItemText","marginBottom","subtitle","maxWidth","SectionHeader","title","Typography","variant","gutterBottom","HeroSection","textAlign","_toFixedNum","str","Math","abs","parseFloat","toFixed","toLocaleString","_toPercent","_toMegabucks","megas","netChange","cur","old","aParenB","a","b","PoolStats","tok0","pool","tokens","tok1","totalShares","_valueIn","bal0","bal1","price","spot","originalSpot","hodlValueIn0","hodlValueIn1","valueIn0","valueIn1","length","tokenIn","tokenOut","Bo","balance","Bi","Wi","denormWeight","totalWeight","spotPrice","balanceOriginal","originalSpotPrice","console","log","items","stat","liquidity","symbol","swapFee","Grid","container","justify","map","item","index","PoolLogs","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","this","logs","Component","card","avatarWrapper","justifyContent","avatar","TokensSection","amount1","setAmount1","amount2","setAmount","amount","otherIndex","zwap","Aout","Ai","Wo","Ao","pow","swap","updatePool","addLog","noValidate","autoComplete","Card","CardContent","Avatar","src","toLowerCase","alt","pt","addess","mt","TextField","label","helperText","onChange","event","amountStr","isNaN","_setAmountIfNumeric","target","addLiquidity","axios","require","poolName","sumWeight","tok","join","addPoolName","pools","addr","post","query","res","data","retval","poolIndex","tokenIndex","error","Balancers","state","getBalancer","then","setState","hex","slice","activePoolId","onChoose","sticky","marginTop","wrapper","flexWrap","flex","up","brand","social","alignItems","link","textDecoration","lineHeight","marginLeft","smallLinks","order","Footer","copyright","Wrapper","push","buttonText","buttonColor","buttonPath","setPool","description","IndexPage","NotFoundPage","padding","analytics","Analytics","debug","process","plugins","googleAnalyticsPlugin","trackingId","page","listen","App","exact","path","Boolean","hostname","match","ReactDom","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b2e80b3.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    content: \"\",\n    backgroundPosition: \"center center\",\n    backgroundSize: \"cover\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    position: \"absolute\",\n    zIndex: 0,\n  },\n}));\n\nfunction BackgroundImage(props) {\n  const classes = useStyles();\n\n  const { image, opacity, ...otherProps } = props;\n\n  return (\n    <div\n      className={classes.root}\n      style={{\n        backgroundImage: `url(${image})`,\n        opacity: opacity,\n      }}\n      {...otherProps}\n    />\n  );\n}\n\nexport default BackgroundImage;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport BackgroundImage from \"./BackgroundImage\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { emphasize } from \"@material-ui/core/styles/colorManipulator\";\nimport capitalize from \"@material-ui/core/utils/capitalize\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    // Ensure child <Container> is above background\n    // image (if one is set with the bgImage prop).\n    \"& > .MuiContainer-root\": {\n      position: \"relative\",\n    },\n  },\n\n  // Create color classes that set background color and determine\n  // text color and dividing border automatically based on background color.\n  // Adds the keys colorDefault, colorLight, etc\n  ...[\n    [\"default\", theme.palette.background.default],\n    [\"light\", emphasize(theme.palette.background.default, 0.03)],\n    [\"primary\", theme.palette.primary.main],\n    [\"secondary\", theme.palette.secondary.main],\n  ].reduce((acc, [name, value]) => {\n    acc[`color${capitalize(name)}`] = {\n      backgroundColor: value,\n      // Ensure text is legible on background\n      color: theme.palette.getContrastText(value),\n      // Sibling selector that adds a top border if section above\n      // has the same color class.\n      // We use emphasize to compute border based on background color\n      // and make sure it's always lightly visible.\n      [`& + &`]: {\n        borderTop: `1px solid ${emphasize(value, 0.09)}`,\n      },\n    };\n    return acc;\n  }, {}),\n\n  colorInherit: {\n    color: \"inherit\",\n  },\n\n  colorTransparent: {\n    backgroundColor: \"transparent\",\n    color: \"inherit\",\n  },\n}));\n\nfunction Section(props) {\n  const classes = useStyles();\n\n  const {\n    bgColor = \"default\",\n    bgImage,\n    bgImageOpacity,\n    size = \"normal\",\n    className,\n    children,\n    ...otherProps\n  } = props;\n\n  // Get MUI responsize size object based\n  // on size prop (normal, medium, large, auto)\n  const verticalPadding = {\n    normal: { xs: 6 },\n    medium: { xs: 6, sm: 10 },\n    large: { xs: 6, sm: 20 },\n    auto: 0,\n  }[size];\n\n  return (\n    <Box\n      component=\"section\"\n      py={verticalPadding}\n      className={\n        classes.root +\n        ` ${classes[`color${capitalize(bgColor)}`]}` +\n        (className ? ` ${className}` : \"\")\n      }\n      {...otherProps}\n    >\n      {bgImage && <BackgroundImage image={bgImage} opacity={bgImageOpacity} />}\n\n      {props.children}\n    </Box>\n  );\n}\n\nexport default Section;\n","/*\n  A wrapper around React Router that adds a useRouter() hook so that any component\n  can easily access params, location, history, and trigger navigation.\n  Import from this file instead of react-router-dom directly.\n*/\n\nimport React, { useMemo, useEffect } from \"react\";\nimport {\n  Router as RouterOriginal,\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport queryString from \"query-string\";\n\n// Use a custom history object and pass to Router so that we\n// can utilize history.listen() where needed (such as for pageview tracking)\nimport { createBrowserHistory } from \"history\";\nexport const history = createBrowserHistory();\n\n// Export our <Router> component\n// Includes custom history object and component for auto-scrolling to top\nexport function Router({ children }) {\n  return (\n    <RouterOriginal history={history}>\n      <ScrollToTop />\n      {children}\n    </RouterOriginal>\n  );\n}\n\n// Custom useRouter hook for getting route data and methods inside any component.\n// NOTE: This hook includes all React Router hooks, which can result in extra re-renders\n// in some cases. When needed, you can optimize performance by importing the specific hook\n// you need (such as useParams or useLocation) instead of this custom useRouter hook.\nexport function useRouter() {\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  // Return our custom router object\n  // Memoize so that a new object is only returned if something changes\n  return useMemo(() => {\n    return {\n      // For convenience add push(), replace(), pathname at top level\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      // Merge params and parsed query string into single \"query\" object\n      // so that they can be used interchangeably.\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n      query: {\n        ...queryString.parse(location.search), // Convert string to object\n        ...params,\n      },\n      // Include match, location, history objects so we have\n      // access to extra React Router functionality if needed.\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history]);\n}\n\n// Remove or customize if you need more advanced scroll behavior\n// and don't want to always scroll to top when location.pathname changes.\nfunction ScrollToTop() {\n  const location = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n  return null;\n}\n\nexport {\n  Route,\n  Switch,\n  Link,\n  NavLink,\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\n","import React from \"react\";\nimport {\n  useTheme,\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@material-ui/core/styles\";\nimport * as colors from \"@material-ui/core/colors\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createLocalStorageStateHook } from \"use-local-storage-state\";\n\nconst themeConfig = {\n  // Light theme\n  light: {\n    palette: {\n      type: \"light\",\n      primary: {\n        // Use hue from colors or hex\n        main: colors.indigo[\"500\"],\n        // Uncomment to specify light/dark\n        // shades instead of automatically\n        // calculating from above value.\n        //light: \"#4791db\",\n        //dark: \"#115293\",\n      },\n      secondary: {\n        main: colors.pink[\"500\"],\n      },\n      background: {\n        // Background for <body>\n        // and <Section color=\"default\">\n        default: \"#fff\",\n        // Background for elevated\n        // components (<Card>, etc)\n        paper: \"#fff\",\n      },\n    },\n  },\n\n  // Dark theme\n  dark: {\n    palette: {\n      type: \"dark\",\n      primary: {\n        // Same as in light but we could\n        // adjust color hue if needed\n        main: colors.indigo[\"500\"],\n      },\n      secondary: {\n        main: colors.pink[\"500\"],\n      },\n      background: {\n        default: colors.grey[\"900\"],\n        paper: colors.grey[\"800\"],\n      },\n    },\n  },\n\n  // Values for both themes\n  common: {\n    typography: {\n      fontSize: 14,\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      // Uncomment to make button lowercase\n      // button: { textTransform: \"none\" },\n    },\n    breakpoints: {\n      values: {\n        xs: 0,\n        sm: 600,\n        md: 960,\n        lg: 1200,\n        xl: 1920,\n      },\n    },\n    // Override component styles\n    overrides: {\n      // Global styles\n      MuiCssBaseline: {\n        \"@global\": {\n          \"#root\": {\n            // Flex column that is height\n            // of viewport so that footer\n            // can push self to bottom by\n            // with auto margin-top\n            minHeight: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // Prevent child elements from\n            // shrinking when content\n            // is taller than the screen\n            // (quirk of flex parent)\n            \"& > *\": {\n              flexShrink: 0,\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nfunction getTheme(name) {\n  // Create MUI theme from themeConfig\n  return createMuiTheme({\n    ...themeConfig[name],\n    // Merge in common values\n    ...themeConfig.common,\n    overrides: {\n      // Merge overrides\n      ...(themeConfig[name] && themeConfig[name].overrides),\n      ...(themeConfig.common && themeConfig.common.overrides),\n    },\n  });\n}\n\n// Create a local storage hook for dark mode preference\nconst useDarkModeStorage = createLocalStorageStateHook(\"isDarkMode\");\n\nexport const ThemeProvider = (props) => {\n  // Get system dark mode preference\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\", {\n    noSsr: true,\n  });\n\n  // Get stored dark mode preference\n  let [isDarkModeStored, setIsDarkModeStored] = useDarkModeStorage();\n\n  // Use stored dark mode with fallback to system preference\n  const isDarkMode =\n    isDarkModeStored === undefined ? prefersDarkMode : isDarkModeStored;\n\n  // Get MUI theme object\n  const themeName = isDarkMode ? \"dark\" : \"light\";\n  const theme = getTheme(themeName);\n\n  // Add toggle function to theme object\n  theme.palette.toggle = () => setIsDarkModeStored((value) => !value);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      {/* Set global MUI styles */}\n      <CssBaseline />\n      {props.children}\n    </MuiThemeProvider>\n  );\n};\n\n// Hook for detecting dark mode and toggling between light/dark\n// More convenient than reading theme.palette.type from useTheme\nexport function useDarkMode() {\n  // Get current Material UI theme\n  const theme = useTheme();\n  // Check if it's the dark theme\n  const isDarkMode = theme.palette.type === \"dark\";\n  // Return object containing dark mode value and toggle function\n  return { value: isDarkMode, toggle: theme.palette.toggle };\n}\n","import React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Link } from \"./../util/router.js\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useDarkMode } from \"./../util/theme.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: 28,\n    marginRight: theme.spacing(2),\n  },\n  drawerList: {\n    width: 250,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Navbar(props) {\n  const classes = useStyles();\n\n  const auth = useAuth();\n  const darkMode = useDarkMode();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [menuState, setMenuState] = useState(null);\n\n  // Use inverted logo if specified\n  // and we are in dark mode\n  const logo =\n    props.logoInverted && darkMode.value ? props.logoInverted : props.logo;\n\n  const handleOpenMenu = (event, id) => {\n    // Store clicked element (to anchor the menu to)\n    // and the menu id so we can tell which menu is open.\n    setMenuState({ anchor: event.currentTarget, id });\n  };\n\n  const handleCloseMenu = () => {\n    setMenuState(null);\n  };\n\n  return (\n    <Section bgColor={props.color} size=\"auto\">\n      <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n        <Container disableGutters={true}>\n          <Toolbar>\n            <Link to=\"/\">\n              /\n            </Link>\n            <div className={classes.spacer} />\n            <Hidden mdUp={true} implementation=\"css\">\n              <IconButton\n                onClick={() => {\n                  setDrawerOpen(true);\n                }}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            <Hidden smDown={true} implementation=\"css\">\n              <Button color=\"inherit\" component={Link} to=\"/about\">\n                { '{ impSlap }' }\n              </Button>\n\n\n              <IconButton\n                color=\"inherit\"\n                onClick={darkMode.toggle}\n                style={{ opacity: 0.6 }}\n              >\n                {darkMode.value && <NightsStayIcon />}\n\n                {!darkMode.value && <WbSunnyIcon />}\n              </IconButton>\n            </Hidden>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Drawer\n        anchor=\"right\"\n        open={drawerOpen}\n        onClose={() => setDrawerOpen(false)}\n      >\n        <List\n          className={classes.drawerList}\n          onClick={() => setDrawerOpen(false)}\n        >\n          <ListItem button={true} component={Link} to=\"/about\">\n            <ListItemText>impSlap</ListItemText>\n          </ListItem>\n\n          <ListItem>\n            <IconButton\n              color=\"inherit\"\n              onClick={darkMode.toggle}\n              style={{ opacity: 0.6 }}\n            >\n              {darkMode.value && <NightsStayIcon />}\n\n              {!darkMode.value && <WbSunnyIcon />}\n            </IconButton>\n          </ListItem>\n        </List>\n      </Drawer>\n    </Section>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // Add bottom margin if element below\n    \"&:not(:last-child)\": {\n      marginBottom: \"2rem\",\n    },\n  },\n  subtitle: {\n    // Subtitle text generally isn't very long\n    // so usually looks better to limit width.\n    maxWidth: 700,\n    // So we can have max-width but still\n    // have alignment controlled by text-align.\n    display: \"inline-block\",\n  },\n}));\n\nfunction SectionHeader(props) {\n  const classes = useStyles();\n\n  const { subtitle, title, size, className, ...otherProps } = props;\n\n  // Render nothing if no title or subtitle\n  if (!title && !subtitle) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"header\"\n      className={classes.root + (props.className ? ` ${props.className}` : \"\")}\n      {...otherProps}\n    >\n      {title && (\n        <Typography\n          variant={`h${size}`}\n          gutterBottom={props.subtitle ? true : false}\n        >\n          {title}\n        </Typography>\n      )}\n\n      {subtitle && (\n        <Typography variant=\"subtitle1\" className={classes.subtitle}>\n          {subtitle}\n        </Typography>\n      )}\n    </Box>\n  );\n}\n\nexport default SectionHeader;\n","import React from \"react\";\nimport Section from \"./Section\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport SectionHeader from \"./SectionHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"./../util/router.js\";\n\nfunction HeroSection(props) {\n  return (\n    <Section\n      bgColor={props.bgColor}\n      size={props.size}\n      bgImage={props.bgImage}\n      bgImageOpacity={props.bgImageOpacity}\n    >\n      <Container>\n        <Box textAlign=\"center\">\n          <SectionHeader\n            title={props.title}\n            subtitle={props.subtitle}\n            size={4}\n          />\n\n      {/*<Button\n            variant=\"contained\"\n            size=\"large\"\n            color={props.buttonColor}\n            component={Link}\n            to={props.buttonPath}\n          >\n            {props.buttonText}\n          </Button>*/}\n        </Box>\n      </Container>\n    </Section>\n  );\n}\n\nexport default HeroSection;\n","import React from \"react\";\nimport Section from \"./Section\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction _toFixedNum(str) {\n    if (typeof str == 'undefined') { return '' }\n    if (Math.abs(parseFloat(str)) < 1) {\n      return parseFloat(str).toFixed(5)\n    }\n    return parseFloat(str).toLocaleString()\n}\nfunction _toPercent(str) {\n    return (100*parseFloat(str)).toLocaleString() + '%'\n}\nfunction _toMegabucks(str) {\n    if (typeof str == 'undefined') { return '' }\n    let num = parseFloat(str)\n    let megas = num/1000000\n    return '$' + (megas < 1 ? megas.toFixed(2) : megas.toFixed(1)) + 'M'\n}\n\n// pool and totalWeight not strictly needed\nfunction spotPrice(tokenIn, tokenOut, pool) {\n  let Bo = tokenOut.balance\n  let Bi = tokenIn.balance\n  let Wi = tokenIn.denormWeight / pool.totalWeight\n  let Wo = tokenOut.denormWeight / pool.totalWeight\n  return (Bo / Wo) / (Bi / Wi)\n}\nfunction originalSpotPrice(tokenIn, tokenOut, pool) {\n  let Bo = tokenOut.balanceOriginal\n  let Bi = tokenIn.balanceOriginal\n  let Wi = tokenIn.denormWeight / pool.totalWeight\n  let Wo = tokenOut.denormWeight / pool.totalWeight\n  return (Bo / Wo) / (Bi / Wi)\n}\nfunction netChange(cur, old) {\n    return `${(cur - old > 0 ? '+' : '') + _toFixedNum(cur - old)} (${_toPercent((cur - old)/old)})`\n}\nfunction aParenB(a, b) {\n    return `${a} (${b})`\n}\n\nfunction PoolStats(props) {\n  const tok0 = props.pool.tokens[0]\n  const tok1 = props.pool.tokens[1]\n  const totalShares = parseFloat(props.pool.totalShares)\n\n  let _valueIn = (bal0, bal1, price) => bal0/totalShares + price * bal1/totalShares\n  let spot = 0\n  let originalSpot = 0\n  let hodlValueIn0 = 0\n  let hodlValueIn1 = 0\n  let valueIn0 = 0\n  let valueIn1 = 0\n  if (props.pool.tokens.length) {\n      spot = spotPrice(tok0, tok1, props.pool)\n      originalSpot = originalSpotPrice(tok0, tok1, props.pool)\n      hodlValueIn0 = _valueIn(tok0.balanceOriginal, tok1.balanceOriginal, 1/spot)\n      console.log(tok0.balanceOriginal, tok1.balanceOriginal, 1/spot, totalShares)\n      hodlValueIn1 = _valueIn(tok1.balanceOriginal, tok0.balanceOriginal, spot)\n      valueIn0 = _valueIn(tok0.balance, tok1.balance, 1/spot)\n      valueIn1 = _valueIn(tok1.balance, tok0.balance, spot)\n  }\n\n  const items = props.pool.tokens.length == 0 ? [] : [\n    {\n      title: \"Original Market Cap\",\n      stat: _toMegabucks(props.pool.liquidity)\n    },\n    {\n      title: \"Total BPT Shares\",\n      stat: _toFixedNum(totalShares)\n    },\n    {\n      title: \"Rate (Inverse)\",\n      stat: aParenB(tok0.symbol + '/' + tok1.symbol, tok1.symbol + '/' + tok0.symbol)\n    },\n    {\n      title: \"Original Spot Price (Inverse)\",\n      stat: aParenB(_toFixedNum(originalSpot), _toFixedNum(1/originalSpot))\n    },\n    {\n      title: `Original 1 BPT had ${tok0.symbol} + ${tok1.symbol}` ,\n      stat: _toFixedNum(tok0.balanceOriginal / totalShares) + ' + ' +  _toFixedNum(tok1.balanceOriginal / totalShares)\n    },\n    {\n      title: `Current 1 BPT has ${tok0.symbol} + ${tok1.symbol}`,\n      stat: _toFixedNum(tok0.balance / totalShares) + ' + ' + _toFixedNum(tok1.balance / totalShares)\n    },\n    {\n      title: 'Total Pool ' + aParenB(tok0.symbol, tok1.symbol),\n      stat: aParenB(_toFixedNum(tok0.balance), _toFixedNum(tok1.balance))\n    },\n    {\n      title: \"Current Spot Price (Inverse)\",\n      stat: aParenB(_toFixedNum(spot), _toFixedNum(1/spot))\n    },\n    {\n      title: 'HODL Value of Original BPT in current spot ' + tok0.symbol + ` (${tok1.symbol})`,\n      stat: aParenB(_toFixedNum(hodlValueIn0), _toFixedNum(hodlValueIn1))\n    },\n    {\n      title: 'Value of 1 BPT in ' + tok0.symbol + ` (${tok1.symbol})`,\n      stat: aParenB(_toFixedNum(valueIn0), _toFixedNum(valueIn1))\n    },\n    {\n      title: 'Divergence Loss vs HODL in ' + tok0.symbol + ` (${tok1.symbol})`,\n      stat: aParenB(_toFixedNum(valueIn0 - hodlValueIn0), _toFixedNum(valueIn1 - hodlValueIn1))\n    },\n    {\n      title: '% Spot Price Change in ' + tok0.symbol + ` (${tok1.symbol})`,\n      stat: aParenB(_toPercent(spot / originalSpot - 1), _toPercent((1/spot) / (1/originalSpot) - 1))\n    },\n    {\n      title: 'Net Change in 1 BPT in ' + tok0.symbol,\n      stat: netChange(tok0.balance / totalShares, tok0.balanceOriginal / totalShares)\n    },\n    {\n      title: 'Net Change in 1 BPT in ' + tok1.symbol,\n      stat: netChange(tok1.balance / totalShares, tok1.balanceOriginal / totalShares)\n    },\n    {\n      title: '% Divergence Loss vs HODL in ' + tok0.symbol + ` (${tok1.symbol})`,\n      stat: aParenB(_toPercent((valueIn0 - hodlValueIn0)/hodlValueIn0), _toPercent((valueIn1 - hodlValueIn1)/hodlValueIn1))\n    },\n    {\n      title: \"Swap Fee\",\n      stat: _toPercent(props.pool.swapFee)\n    },\n  ];\n\n  return (\n    <Section\n      bgColor={props.bgColor}\n      size={props.size}\n      bgImage={props.bgImage}\n      bgImageOpacity={props.bgImageOpacity}\n    >\n      <Container>\n        <Grid container={true} justify=\"center\" spacing={4}>\n          {items.map((item, index) => (\n            <Grid item={true} xs={12} sm={3} key={index}>\n              <Box textAlign=\"center\">\n                <Typography variant=\"overline\">{item.title}</Typography>\n                <Typography variant=\"h4\">{item.stat}</Typography>\n              </Box>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Section>\n  );\n}\n\nexport default PoolStats;\n","import React, { useState, Component } from \"react\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nclass PoolLogs extends Component {\n  render() {\n    return (\n      <Grid container={true} justify=\"center\" spacing={4}>\n        <Accordion defaultExpanded={true}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>Liquidity Log</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <List>\n                {this.props.logs.map((log, index) =>\n                  (<ListItem key={'log-' + index}><ListItemText>{index+1}: {log}</ListItemText></ListItem>)\n                )}\n            </List>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n    );\n  }\n}\nexport default PoolLogs;\n","import React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport Container from \"@material-ui/core/Container\";\nimport SectionHeader from \"./SectionHeader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  avatarWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n  },\n}));\n\nfunction _toFixedNum(str) {\n    if (typeof str == 'undefined') { return '' }\n    return parseFloat(str).toFixed(4)\n}\nfunction _tokenIcon(symbol) {\n    return `https://icons.bitbot.tools/api/${symbol.toLowerCase()}/64x64`\n}\nfunction swap(tokenIn, tokenOut, pool, Ai) {\n  //  Ao = Bo x (1 - (Bi / (Bi + Ai * (1-swapFee)))^(Wi/Wo))\n  let Bo = tokenOut.balance\n  let Bi = tokenIn.balance\n  let Wi = tokenIn.denormWeight / pool.totalWeight\n  let Wo = tokenOut.denormWeight / pool.totalWeight\n  let swapFee = pool.swapFee\n\n  let Ao = Bo * (1 - Math.pow(Bi / (Bi + Ai * (1 - swapFee)), Wi/Wo))\n  tokenIn.balance += Ai // XXX need to setState\n  tokenOut.balance -= Ao\n\n  return Ao\n}\nfunction TokensSection(props) {\n  const classes = useStyles();\n  // XXX >2 tokens in pool...\n  const [amount1, setAmount1] = useState(0)\n  const [amount2, setAmount2] = useState(0)\n  let setAmount = [setAmount1, setAmount2]\n  let _setAmountIfNumeric = (amountStr, index) => isNaN(parseFloat(amountStr)) ? null : setAmount[index](parseFloat(amountStr))\n  let amount = [amount1, amount2]\n  const otherIndex = (index) => index == 0 ? 1 : 0\n  const zwap = (index) => {\n    let Aout = swap(props.pool.tokens[index], props.pool.tokens[otherIndex(index)], props.pool, amount[index])\n    props.updatePool(props.pool)\n    setAmount[otherIndex(index)](Aout)\n    let log = `SWAP from ${amount[index]} ${props.pool.tokens[index].symbol} to ${Aout} ${props.pool.tokens[otherIndex(index)].symbol}`\n    props.addLog(log)\n  }\n  // TODO calculate amount to add liquidity on both sides, keep price constant\n  const addLiquidity = (index) => {\n    props.pool.tokens[index].balance += amount[index]\n    const addRemove = amount[index] > 0 ? 'ADD' : 'REMOVE'\n    let log = `${addRemove} liquidity from ${props.pool.tokens[index].symbol}: ${amount[index]} `\n    props.addLog(log)\n  }\n\n  return (\n    <Section\n      bgColor={props.bgColor}\n      size={props.size}\n      bgImage={props.bgImage}\n      bgImageOpacity={props.bgImageOpacity}\n    >\n      <Container>\n        <SectionHeader\n          title={props.title}\n          subtitle={props.subtitle}\n          size={4}\n          textAlign=\"center\"\n        />\n        <Grid container={true} justify=\"center\" spacing={4}>\n          {props.pool.tokens.map((item, index) => (\n            <Grid item={true} xs={12} sm={6} md={4} key={index}>\n            <form noValidate autoComplete=\"off\">\n              <Card className={classes.card}>\n                <CardContent>\n                  <Box className={classes.avatarWrapper}>\n                    <Avatar\n                      src={_tokenIcon(item.symbol)}\n                      alt={item.symbol}\n                      className={classes.avatar}\n                    />\n                  </Box>\n                  <Box textAlign=\"center\" pt={3}>\n                    <Typography variant=\"body2\" component=\"p\">\n                      {item.symbol}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {item.addess}\n                    </Typography>\n                    <Box mt={2}>\n                      <TextField\n                          id=\"outlined-helperText\"\n                          label=\"Amount (<0 Liquidity OK)\"\n                          value={amount[index]}\n                          helperText={'Balance: ' + item.balance}\n                          variant=\"outlined\"\n                          onChange={event => _setAmountIfNumeric(event.target.value, index)}\n                      />\n                      <Typography variant=\"body1\" component=\"p\">\n                        Token weight: {_toFixedNum(100 * item.denormWeight / props.pool.totalWeight)}%\n                      </Typography>\n                      <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color={\"primary\"}\n                        onClick={() => zwap(index)}\n                      >\n                        Swap In\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color={\"primary\"}\n                        onClick={() => addLiquidity(index)}\n                      >\n                        Add Liquidity\n                      </Button>\n                    </Box>\n                  </Box>\n                </CardContent>\n              </Card>\n            </form>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Section>\n  );\n}\n\nexport default TokensSection;\n","import React, { useState, Component } from \"react\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst axios = require('axios')\n\nfunction shortHex(hex) {\n    return hex.slice(0, 6) + '...' + hex.slice(-4)\n}\nfunction poolName(pool) {\n    const sumWeight = pool.totalWeight\n    return pool.tokens.map(tok => `${(100 * tok.denormWeight / sumWeight).toFixed(2)}% ${tok.symbol}`).join(' ')\n}\nfunction addPoolName(pools) {\n    return pools.map(pool => { return { name: poolName(pool), ...pool } })\n}\nasync function getBalancer(addr) {\n    try {\n        let res = await axios.post('https://api.thegraph.com/subgraphs/name/balancer-labs/balancer', {\n          query: `\n            {\n              pools(first: 10, orderBy: liquidity, orderDirection: desc, where: {publicSwap: true, finalized: true, active: true}) {\n                id\n                swapFee\n                totalShares\n                totalWeight\n                liquidity\n                tokensList\n                tokens {\n                  id\n                  symbol\n                  address\n                  balance\n                  denormWeight\n                }\n              }\n            }\n          `\n        })\n\n        console.log(res.data.data.pools)\n        let retval = res.data.data.pools\n        retval = addPoolName(retval)\n        for (let poolIndex = 0; poolIndex < retval.length; poolIndex++) {\n          for (let tokenIndex = 0; tokenIndex < retval[poolIndex].tokens.length; tokenIndex++) {\n            retval[poolIndex].tokens[tokenIndex].balance = parseFloat(retval[poolIndex].tokens[tokenIndex].balance)\n            retval[poolIndex].tokens[tokenIndex].balanceOriginal = retval[poolIndex].tokens[tokenIndex].balance\n            retval[poolIndex].tokens[tokenIndex].denormWeight = parseFloat(retval[poolIndex].tokens[tokenIndex].denormWeight)\n          }\n          retval[poolIndex].swapFee = parseFloat(retval[poolIndex].swapFee)\n          retval[poolIndex].totalWeight = parseFloat(retval[poolIndex].totalWeight)\n        }\n\n        return retval\n    } catch(error) {\n      console.error(error)\n      return null\n    }\n}\n\nclass Balancers extends Component {\n  constructor() {\n    super();\n    this.state = { pools: [] };\n  }\n\n  componentDidMount() {\n    getBalancer().then(retval => this.setState({pools: retval}))\n  }\n\n  render() {\n    return (\n      <Grid container={true} justify=\"center\" spacing={4}>\n        <Accordion defaultExpanded={true} >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>Top 10 Balancer Pools (CLICK ONE)</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <List>\n              {this.state.pools.map(pool => (\n                <ListItem key={pool.id}>\n                  <ListItemText>{shortHex(pool.id)}</ListItemText>\n                  <Button\n                    variant={pool.id == this.props.activePoolId ? \"contained\" : \"outlined\"}\n                    size=\"large\"\n                    color={\"primary\"}\n                    onClick={() => this.props.onChoose(pool)}\n                  >\n                    {pool.name}\n                  </Button>\n\n                </ListItem>\n              ))}\n            </List>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n    );\n  }\n}\nexport default Balancers;\n","import React from \"react\";\nimport Section from \"./Section\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"./../util/router.js\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport { useDarkMode } from \"./../util/theme.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  sticky: {\n    marginTop: \"auto\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  item: {\n    display: \"flex\",\n    flex: \"none\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    marginBottom: 24,\n    [theme.breakpoints.up(\"sm\")]: {\n      flex: \"50%\",\n    },\n  },\n  brand: {\n    display: \"block\",\n    height: 32,\n  },\n  social: {\n    alignItems: \"flex-end\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    lineHeight: 1,\n    \"&:hover\": {\n      opacity: 0.8,\n    },\n    \"&:not(:first-of-type)\": {\n      marginLeft: 20,\n    },\n  },\n  left: {\n    [theme.breakpoints.up(\"sm\")]: {\n      justifyContent: \"flex-start\",\n    },\n  },\n  right: {\n    [theme.breakpoints.up(\"sm\")]: {\n      justifyContent: \"flex-end\",\n    },\n  },\n  // Move links to end (bottom right)\n  // Swaps position with social\n  smallLinks: {\n    [theme.breakpoints.up(\"sm\")]: {\n      order: 1,\n    },\n  },\n}));\n\nfunction Footer(props) {\n  const classes = useStyles();\n\n  const darkMode = useDarkMode();\n  // Use inverted logo if specified\n  // and we are in dark mode\n  const logo =\n    props.logoInverted && darkMode.value ? props.logoInverted : props.logo;\n\n  return (\n    <Section\n      bgColor={props.bgColor}\n      size={props.size}\n      bgImage={props.bgImage}\n      bgImageOpacity={props.bgImageOpacity}\n      className={props.sticky && classes.sticky}\n    >\n      <Container>\n        <div className={classes.wrapper}>\n          {props.copyright && (\n            <div className={`${classes.item} ${classes.left}`}>\n              <Typography component=\"p\">{props.copyright}</Typography>\n            </div>\n          )}\n        </div>\n      </Container>\n    </Section>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Navbar from \"./../components/Navbar\";\nimport HeroSection from \"./../components/HeroSection\";\nimport PoolStats from \"./../components/PoolStats\";\nimport PoolLogs from \"./../components/PoolLogs\";\nimport TokensSection from \"./../components/TokensSection\";\nimport Balancers from \"./../components/Balancers\";\nimport Footer from \"./../components/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"./../util/router.js\";\n\n\n\nclass Wrapper extends Component {\n  constructor() {\n    super();\n    this.state = { activePoolId: null, pool: {name: 'none', tokens: []}, logs: [] };\n  }\n\n  setPool(pool) {\n      this.setState({pool})\n      this.setState({activePoolId: pool.id})\n  }\n  updatePool(pool) {\n      this.setState({pool})\n  }\n  addLog(log) {\n      this.state.logs.push(log)\n      console.log(this.state.logs)\n      this.setState({logs: this.state.logs})\n  }\n\n  render() {\n    return (\n      <div>\n          <HeroSection\n            bgColor=\"default\"\n            size=\"medium\"\n            bgImage=\"\"\n            bgImageOpacity={1}\n            title=\"{ impSlap }\"\n            subtitle=\"Learn about Impermanent Loss / Divergence Loss. Simulate swaps and liquidity on Balancer pools and other AMM DEXes.\"\n            buttonText={this.state.pool.name}\n            buttonColor=\"primary\"\n            buttonPath=\"/\"\n          />\n          <Balancers activePoolId={this.state.activePoolId} onChoose={(pool) => this.setPool(pool)} />\n          <TokensSection\n            bgColor=\"default\"\n            size=\"medium\"\n            bgImage=\"\"\n            bgImageOpacity={1}\n            title=\"Swap & Add/Remove Liquidity\"\n            subtitle=\"\"\n\n            pool={this.state.pool}\n            updatePool={(pool) => this.updatePool(pool)}\n            items={[{name: 'renBTC'}, {name: 'WETH', description: 'Wrapped ETH'}]}\n            addLog={(log) => this.addLog(log)}\n          />\n          <PoolLogs logs={this.state.logs} />\n          <PoolStats\n            pool={this.state.pool}\n            bgColor=\"default\"\n            size=\"medium\"\n            bgImage=\"\"\n            bgImageOpacity={1}\n           />\n      </div>\n    )\n  }\n}\n\n/////////////////////////////////////////////\n\n\nfunction IndexPage(props) {\n  return (\n    <>\n      <Navbar\n        color=\"default\"\n        logo=\"https://uploads.divjoy.com/logo.svg\"\n        logoInverted=\"https://uploads.divjoy.com/logo-white.svg\"\n      />\n      <Wrapper />\n      <Footer\n        bgColor=\"default\"\n        size=\"medium\"\n        bgImage=\"\"\n        bgImageOpacity={1}\n        description=\"Simulating swapping and liquidity in Balancer pools and beyond\"\n        copyright=\"© 2021 impSlap\"\n        logo=\"\"\n        logoInverted=\"\"\n        sticky={true}\n      />\n    </>\n  );\n}\n\nexport default IndexPage;\n","import React from \"react\";\n\nfunction NotFoundPage(props) {\n  return (\n    <div\n      style={{\n        padding: \"50px\",\n        width: \"100%\",\n        textAlign: \"center\",\n      }}\n    >\n      The page <code>{props.location.pathname}</code> could not be found\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import Analytics from \"analytics\";\nimport googleAnalyticsPlugin from \"@analytics/google-analytics\";\nimport { history } from \"./router.js\";\n\n// Initialize analytics and plugins\n// Documentation: https://getanalytics.io\nconst analytics = Analytics({\n  debug: process.env.NODE_ENV !== \"production\",\n  plugins: [\n    googleAnalyticsPlugin({\n      trackingId: process.env.REACT_APP_GA_TRACKING_ID,\n    }),\n  ],\n});\n\n// Track initial pageview\nif (typeof window !== \"undefined\") {\n  analytics.page();\n}\n\n// Track pageview on route change\nhistory.listen(() => {\n  analytics.page();\n});\n\nexport default analytics;\n","import React from \"react\";\nimport IndexPage from \"./index\";\nimport { Switch, Route, Router } from \"./../util/router.js\";\nimport NotFoundPage from \"./not-found.js\";\nimport \"./../util/analytics.js\";\nimport { ThemeProvider } from \"./../util/theme.js\";\n\nfunction App(props) {\n  return (\n    <ThemeProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={IndexPage} />\n\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./pages/_app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}